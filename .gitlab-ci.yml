stages:
  - prepare
  - test
  - build
  - publish

variables:
  # cache gradle working directory
  GRADLE_USER_HOME: /cache/.gradle
  POSTGRES_USER: docker
  POSTGRES_PASSWORD: docker
  POSTGRES_DB: docker
  MONGO_INITDB_ROOT_USERNAME: mongoadmin
  MONGO_INITDB_ROOT_PASSWORD: secret
  MONGO_INITDB_DATABASE: cytomine
  
default:
  tags: 
    - docker

make-version-name:
  stage: prepare
  # regex check does not work with /bin/sh because of parenthesis so we need /bin/bash here
  image: bash:5.2.15-alpine3.16
  script:
    - if [[ "$CI_COMMIT_REF_NAME" =~ ^refs/tags/ ]] && [[ "$CI_COMMIT_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
        echo "CM_VERSION_NAME=$CI_COMMIT_TAG" > .env;
      else
        echo "CM_VERSION_NAME=$CI_COMMIT_SHORT_SHA-$(date '+%Y%m%d%H%M%S')-SNAPSHOT" > .env;
      fi
    - cat .env
  artifacts:
    paths:
      - .env

run-junit:
  stage: test
  image: gradle:7.4.2-jdk17-alpine
  services:
    - alias: postgres
      name: registry.cytom.in/cm/rnd/cytomine/tools/envs/postgis:15-3.3-alpine-1.2.0
    - alias: mongodb
      name: mongo:6.0.3-focal
    - alias: rabbitmq
      name: rabbitmq:3.10
    - alias: ldap
      name: registry.cytom.in/cm/rnd/cytomine/tools/envs/ldap:0.5.5-0.0.2
  script:
    - export GRADLE_USER_HOME=$GRADLE_USER_HOME
    - sed -i -- "s/localhost:5433/postgres:5432/g" src/test/resources/application.yml
    - "sed -i -- 's/host: 127.0.0.1/host: mongodb/g' src/test/resources/application.yml"
    - "sed -i -- 's/port: 27018/port: 27017/g' src/test/resources/application.yml"
    - sed -i -- "s/127.0.0.1:390/ldap:389/g" src/test/resources/application.yml
    - sed -i -- "s/127.0.0.1:390/ldap:389/g" src/test/java/be/cytomine/security/LdapClientTests.java
    - gradle :test --no-daemon
  artifacts:
    reports:
      junit: build/test-results/test/**/TEST-*.xml

build-jar:
  stage: build
  image: gradle:7.4.2-jdk17-alpine
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: make-version-name
      artifacts: true
    #- job: run-junit
    #  artifacts: false
  script:
    - source .env
    - export GRADLE_USER_HOME=$GRADLE_USER_HOME
    - "sed -i -- 's/version: 0.0.0/version: '$CM_VERSION_NAME'/g' src/main/resources/application.yml"
    - gradle bootJar --console=verbose
    - mv build/libs/cytomine.jar build/libs/cytomine-$CM_VERSION_NAME.jar
  artifacts:
    when: on_success
    expire_in: never
    paths: 
      - build/libs/cytomine-*.jar

publish-jar:
  stage: publish
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: make-version-name
      artifacts: true
    - job: build-jar
      artifacts: true
  script:
    - echo "TODO upload somehwere"

publish-docker-image:
  stage: publish
  image: docker:latest
  needs:
    - job: make-version-name
      artifacts: true
    #- job: run-junit
    #  artifacts: false
  script:
    - source .env
    - export SCRIPTS_REPO_FULL_URL=https://${SCRIPTS_REPO_ACCESS_TOKEN_NAME}:${SCRIPTS_REPO_ACCESS_TOKEN_VALUE}@${SCRIPTS_REPO_URL}
    - export DOCKER_IMAGE_NAME_FULL=${CI_REGISTRY_IMAGE}/core-eet:${CM_VERSION_NAME}
    - echo ${SCRIPTS_REPO_FULL_URL}
    - docker build --build-arg CORE_VERSION=${CM_VERSION_NAME} --build-arg SCRIPTS_REPO_TAG=latest --secret id=scripts_repo_url,env=SCRIPTS_REPO_FULL_URL -t ${DOCKER_IMAGE_NAME_FULL} -f docker/Dockerfile .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push ${DOCKER_IMAGE_NAME_FULL}
    # cleaning up
    - docker rmi ${DOCKER_IMAGE_NAME_FULL}

create-release:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: publish-jar
      artifacts: false
    - job: make-version-name
      artifacts: true
    - job: publish-docker-image
      artifacts: false
  release:
    tag_name: '$CI_COMMIT_TAG'
    name: 'Release $CI_COMMIT_TAG'
    description: > 
      This is an automated release generated for tag '$CI_COMMIT_TAG'
      Docker image: ${CI_REGISTRY_IMAGE}/core-eet:${CM_VERSION_NAME}
      Jar file: TODO
  script:
    - source .env
    - echo "creating a release" 